We will use Iterative Deepening Search (IDS) algorithm

def search(state)
    moves <- get_all_move(state)
    min   <- 0
    mret  <- null
    for move in moves:
        root <- move
        score, ret <- IDS(root)
        if score < min then:
            min  <- score
            mret <- ret
    return mret


def get_all_move(state: dict[(x, y): (col, val)]) -> moves: list[(x, y)]
    total_score <- get_total(state)
    if total_score < 49
        for (x, y) in (0..6, 0..6)
            if dict[(x, y)].col == 'r' || null
                list.append((x, y))
    else
        for each (x, y) in state:
            if dict[(x, y)].col == 'r'
                list.append((x, y))
    return list
            